{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "",
        "title": "Platform API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "api.rtbsolutions.pro",
    "basePath": "/v1",
    "paths": {
        "/audience": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Fetch all audiences",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/audience.Audience"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Create audience",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object audience",
                        "name": "audience",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/audience.Audience"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/audience/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Fetch audience by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/audience.Audience"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Update audience",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object audience",
                        "name": "audience",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/audience.Audience"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/audience/{id}/pixel": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Fetch pixel by audience ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/audience.Pixel"
                        }
                    }
                }
            }
        },
        "/audience/{id}/rule": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Create rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object rule",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/audience.Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/audience/{id}/rule/{rule_id}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Update rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object rule",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/audience.Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/audience/{id}/rule/{rule_id}/condition": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Fetch all conditions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/audience.Condition"
                            }
                        }
                    }
                }
            }
        },
        "/audience/{id}/rule/{rule_id}/conditions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Fetch all conditions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Objects conditions",
                        "name": "conditions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/condition.Conditions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/audience/{id}/rule/{rule_id}/log": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Fetch log by rule Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/audience.Log"
                            }
                        }
                    }
                }
            }
        },
        "/automate/rule": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Automate"
                ],
                "summary": "Fetch all rules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/auto.Rule"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Automate"
                ],
                "summary": "Create rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object rule",
                        "name": "audience",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/auto.Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/automate/rule/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Automate"
                ],
                "summary": "Update rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object rule",
                        "name": "audience",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/auto.Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/automate/rule/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Automate"
                ],
                "summary": "Fetch rule by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/auto.Rule"
                        }
                    }
                }
            }
        },
        "/automate/rule/{id}/logs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Automate"
                ],
                "summary": "Fetch all logs of rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/auto.RuleLog"
                            }
                        }
                    }
                }
            }
        },
        "/automate/rule/{id}/logs/{log_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Automate"
                ],
                "summary": "Fetch single log of rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/auto.RuleLog"
                        }
                    }
                }
            }
        },
        "/automate/rule/{id}/logs/{log_id}/detail": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Automate"
                ],
                "summary": "Fetch all detail logs of rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/auto.Log"
                            }
                        }
                    }
                }
            }
        },
        "/balance": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/balance.Account"
                        }
                    }
                }
            }
        },
        "/campaign": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get all campaigns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ad.Campaign"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Create campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object campaign",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.Campaign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/campaign/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get campaign by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.Campaign"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Update campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object campaign",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.Campaign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/all-media": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get all media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Params",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/media.Params"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/media.CampaignMedia"
                            }
                        }
                    }
                }
            }
        },
        "/campaign/{id}/archive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Archive campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/copy": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Copy campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Copy param",
                        "name": "copy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/campaign.CopyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/launch": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Launch campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/list/ban": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Add or delete record from list in campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Record",
                        "name": "ban",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/list.Ban"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/media": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Add media in campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List media",
                        "name": "list_media",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/media.MediaLists"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreationArray"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/media/{campaign_media_id}/launch": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Launch media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign media ID",
                        "name": "campaign_media_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/media/{campaign_media_id}/pause": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Launch media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign media ID",
                        "name": "campaign_media_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/microbid": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get all microbids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Campaign id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ad.MicroBid"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Add microbid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Campaign id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MicroBid",
                        "name": "microbid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.MicroBid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/microbid/delete/{microbid_id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Remove microbid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Microbid id",
                        "name": "microbid_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/microbid/update": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Update microbid by key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Key and Bid",
                        "name": "microbid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/microbid.UpdateBid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/microbid/update/{microbid_id}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Update microbid by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MicroBid ID",
                        "name": "microbid_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MicroBid",
                        "name": "microbid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.MicroBid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.MicroBid"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/microbid/{microbid_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get microbid by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MicroBid ID",
                        "name": "microbid_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ad.MicroBid"
                            }
                        }
                    }
                }
            }
        },
        "/campaign/{id}/pause": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Pause campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/pixel": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience"
                ],
                "summary": "Fetch pixel by campaign ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Audience ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/campaign.Pixel"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/trafficdoctor": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get campaign traffic doctor data by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/influxservice.NobidResponse"
                        }
                    }
                }
            }
        },
        "/campaign/{id}/unarchive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Unarchive campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/campaigns/stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get all campaigns with stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Stat param",
                        "name": "stat_param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/stat.StatParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ad.Campaign"
                            }
                        }
                    }
                }
            }
        },
        "/dict/adapter": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all adapters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adapter.Adapters"
                            }
                        }
                    }
                }
            }
        },
        "/dict/browser": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Fetch browsers by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dict.FetchByIdsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Browser"
                            }
                        }
                    }
                }
            }
        },
        "/dict/browser/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Search browsers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/browser.Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.BrowserView"
                            }
                        }
                    }
                }
            }
        },
        "/dict/city": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Fetch cities by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dict.FetchByIdsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Geo"
                            }
                        }
                    }
                }
            }
        },
        "/dict/city/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Search cities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/geo.CitySearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Geo"
                            }
                        }
                    }
                }
            }
        },
        "/dict/counties": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all countries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Geo"
                            }
                        }
                    }
                }
            }
        },
        "/dict/device": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Device"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Fetch devices by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dict.FetchByIdsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Device"
                            }
                        }
                    }
                }
            }
        },
        "/dict/device/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Search devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/device.Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.DeviceView"
                            }
                        }
                    }
                }
            }
        },
        "/dict/device_type": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all placement types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/placementtype.PlacementTypes"
                            }
                        }
                    }
                }
            }
        },
        "/dict/display-size": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all display sizes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.DeviceType"
                            }
                        }
                    }
                }
            }
        },
        "/dict/dsp-region": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Fetch DSP regions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Region"
                            }
                        }
                    }
                }
            }
        },
        "/dict/event": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dict/geo": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all GEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Geo"
                            }
                        }
                    }
                }
            }
        },
        "/dict/iab": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Load IAB by codes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/iab.IabParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Iab"
                            }
                        }
                    }
                }
            }
        },
        "/dict/iab/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Search IAB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/browser.Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Iab"
                            }
                        }
                    }
                }
            }
        },
        "/dict/isp": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Fetch ISP by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dict.FetchByIdsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Isp"
                            }
                        }
                    }
                }
            }
        },
        "/dict/isp/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Search ISP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/isp.Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Isp"
                            }
                        }
                    }
                }
            }
        },
        "/dict/languages": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all languages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Lang"
                            }
                        }
                    }
                }
            }
        },
        "/dict/os": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get all OS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Os"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Fetch OS by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dict.FetchByIdsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Os"
                            }
                        }
                    }
                }
            }
        },
        "/dict/os/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Search OS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/os.Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.OsView"
                            }
                        }
                    }
                }
            }
        },
        "/dict/region": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Fetch regions by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dict.FetchByIdsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Geo"
                            }
                        }
                    }
                }
            }
        },
        "/dict/region/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Search regions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/geo.RegionSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dict.Geo"
                            }
                        }
                    }
                }
            }
        },
        "/dict/vast/event": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get VAST events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dmp": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DMP"
                ],
                "summary": "Fetch DMP by ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Ids",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dict.FetchByIdsParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dmp.FoundDmp"
                            }
                        }
                    }
                }
            }
        },
        "/dmp/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DMP"
                ],
                "summary": "Search DMP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dmp.Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dmp.FoundDmp"
                            }
                        }
                    }
                }
            }
        },
        "/dsp/entities/stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DSP"
                ],
                "summary": "Fetch all DSP with stat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request dsp with stat",
                        "name": "stat_param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/stat.RequestDspWithStat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Ssp"
                        }
                    }
                }
            }
        },
        "/dsp/entity": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DSP"
                ],
                "summary": "Fetch all DSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Ssp"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DSP"
                ],
                "summary": "Create DSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object DSP",
                        "name": "dsp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Dsp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/dsp/entity/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DSP"
                ],
                "summary": "Fetch DSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "DSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Ssp"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DSP"
                ],
                "summary": "Update DSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "DSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object DSP",
                        "name": "dsp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Dsp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/group": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Get all groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ad.Group"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Create group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/group/{id}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Update group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ad.Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Get all lists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/list.List"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Create list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object list",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/list.List"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/list.List"
                        }
                    }
                }
            }
        },
        "/list/{id}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Update list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object list",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/list.List"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/list.List"
                        }
                    }
                }
            }
        },
        "/list/{id}/data": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Get data list by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/listdata.Pagination"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Add records to list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Records",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/listdata.Records"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Remove records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Records",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/listdata.Records"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/auth.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/auth.FailureResponse"
                        }
                    }
                }
            }
        },
        "/media": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get all media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Show archived",
                        "name": "show_archived",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/media.ItemMedia"
                            }
                        }
                    }
                }
            }
        },
        "/media/banner": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get all banners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/media.Banner"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Create banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"First banner\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"impression_html\":\"\u003cdiv\u003e\u003c/div\u003e\"}",
                        "description": "Object banner in JSON",
                        "name": "banner",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Images",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/media/banner/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/media.Banner"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Update banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"First banner\",\"size\":\"480x320\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"impression_html\":\"\u003cdiv\u003e\u003c/div\u003e\"}",
                        "description": "Object banner in JSON",
                        "name": "banner",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Images",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Delete banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/banner/{id}/archive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/banner/{id}/unarchive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/file": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/media/native": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get all native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/media.Native"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Create native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"First native\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"impression_html\":\"\u003cdiv\u003e\u003c/div\u003e\",\"title\":\"First native\",\"desc\":\"Description\",\"stars\":5,\"button\":\"Buy\"}",
                        "description": "Object banner in JSON",
                        "name": "native",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Icon",
                        "name": "icon",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/media/native/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Native ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/media.Native"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Update native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Native ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"First native\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"impression_html\":\"\u003cdiv\u003e\u003c/div\u003e\",\"title\":\"First native\",\"desc\":\"Description\",\"stars\":5,\"button\":\"Buy\"}",
                        "description": "Object banner in JSON",
                        "name": "native",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Icon",
                        "name": "icon",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Delete native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Native ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/native/{id}/archive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Native ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/native/{id}/unarchive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Native ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/preview/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Preview media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Media ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Media type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Ssp"
                        }
                    }
                }
            }
        },
        "/media/tag": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get all tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/media.Tag"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Create tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"First tag\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"impression_html\":\"\u003cdiv\u003e\u003c/div\u003e\",\"body\":\"\u003cdiv\u003e\u003c/div\u003e\"}",
                        "description": "Object banner in JSON",
                        "name": "tag",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Screenshots",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/media/tag/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/media.Tag"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Update native",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"First tag\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"impression_html\":\"\u003cdiv\u003e\u003c/div\u003e\",\"body\":\"\u003cdiv\u003e\u003c/div\u003e\"}",
                        "description": "Object banner in JSON",
                        "name": "tag",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Screenshots",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Delete tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/tag/{id}/archive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/tag/{id}/unarchive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/tags-zip": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Create tags from ZIP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":null,\"tags\":[],\"click_url\":null,\"impression_pixel\":[],\"impression_html\":null}",
                        "description": "Object banner in JSON",
                        "name": "tag",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "ZIP archive",
                        "name": "archive",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/media/video": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get all video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/media.Video"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Create video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"First video\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"click_pixel\":[\"http://google.com\"], \"video_url\":\"https://youtu.be/Bag1gUxuU0g\",\"vast_url\":\"\",\"vast_body\":\"\",\"mime\":\"video/pg4\",\"duration\":60,\"bitrate\":300}",
                        "description": "Object video in JSON",
                        "name": "video",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Screen shots",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/media/video/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/media.Video"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Update video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "{\"name\":\"Update video\",\"tags\":[\"shop\",\"2018\"],\"click_url\":\"https://google.com\",\"impression_pixel\":[\"https://ya.ru\",\"https://gmain.com\"],\"click_pixel\":[\"http://google.com\"], \"video_url\":\"https://youtu.be/Bag1gUxuU0g\",\"vast_url\":\"\",\"vast_body\":\"\",\"mime\":\"video/pg4\",\"duration\":60,\"bitrate\":300}",
                        "description": "Object video in JSON",
                        "name": "video",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Screen shots",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Delete video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/video/{id}/archive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/media/video/{id}/unarchive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Archive video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/placement": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Get all placements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inv.Placement"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Create placement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object placement",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inv.Placement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/placement/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Fetch placement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inv.Placement"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Update placement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object placement",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inv.Placement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/placement/{id}/block": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Get all placement type for block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inv.Block"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Create block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object block",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inv.Block"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/placement/{id}/block/{block_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Fetch block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "block_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inv.Block"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Update block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "block",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object block",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/inv.Block"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Delete block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "block_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/placement/{id}/block/{block_id}/code": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Placement"
                ],
                "summary": "Fetch code block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Placement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "block_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/block.Code"
                        }
                    }
                }
            }
        },
        "/placement/{id}/block/{block_id}/preview": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Preview block",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/profile": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/profile.Profile"
                        }
                    }
                }
            }
        },
        "/profile/password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/password.NewPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/report/demand": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Import detail report in CSV",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Report option",
                        "name": "option",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/demand.DemandReportOption"
                        }
                    }
                ]
            }
        },
        "/ssp": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Get available SSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ssp.Ssp"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Create SSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object SSP",
                        "name": "ssp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Ssp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/ssp/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Fetch SSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "SSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Ssp"
                        }
                    }
                }
            }
        },
        "/ssp/{id}/endpoint": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Get endpoints by SSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "SSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ssp.Endpoint"
                            }
                        }
                    }
                }
            }
        },
        "/ssp/{id}/endpoints": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Get all available endpoints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "SSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ssp.EndpointResponse"
                            }
                        }
                    }
                }
            }
        },
        "/ssp/{id}/inventory": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Fetch SSP Inventory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "SSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/statservice.InventoryOverview"
                        }
                    }
                }
            }
        },
        "/ssp/{id}/link-stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Fetch link for stat by SSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "SSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ssp.StatSsp"
                        }
                    }
                }
            }
        },
        "/ssp/{id}/trends": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Fetch SSP Trends",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "SSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/influxservice.TrendsResponse"
                        }
                    }
                }
            }
        },
        "/ssp/{id}/update": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Update SSP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "SSP ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object SSP",
                        "name": "ssp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/crm.Ssp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessAnswer"
                        }
                    }
                }
            }
        },
        "/supply/campaign": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Fetch all campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ssp.Campaign"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Create campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Object Campaign",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ssp.Campaign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/supply/campaign/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Fetch single campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ssp.Campaign"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Update campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object Campaign",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ssp.Campaign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.SuccessfulCreation"
                        }
                    }
                }
            }
        },
        "/supply/campaigns/stat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSP"
                ],
                "summary": "Fetch all campaign with stat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/ssp.Campaign"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ad.Aux": {
            "type": "object",
            "additionalProperties": {}
        },
        "ad.Campaign": {
            "type": "object",
            "required": [
                "bid",
                "date_end",
                "date_start",
                "deal_ids",
                "domain",
                "freq_cap_type",
                "group_id",
                "impression_pixel",
                "meta",
                "name",
                "ssp",
                "strategy",
                "target_tags",
                "target_url"
            ],
            "properties": {
                "api_targeting": {
                    "type": "string"
                },
                "aux": {
                    "type": "object",
                    "$ref": "#/definitions/ad.Aux"
                },
                "bid": {
                    "type": "number",
                    "example": 0.5
                },
                "browsers": {
                    "type": "string",
                    "example": "4795,4796"
                },
                "city": {
                    "type": "string",
                    "example": "528109,498525"
                },
                "connection_type": {
                    "type": "string",
                    "example": "3,4"
                },
                "country": {
                    "type": "string",
                    "example": "US,RU"
                },
                "date_end": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "date_start": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "deal_ids": {
                    "type": "string",
                    "example": "ffwwee,eewwdd"
                },
                "device_types": {
                    "type": "string",
                    "example": "1,2"
                },
                "devices": {
                    "type": "string",
                    "example": "38649,38650"
                },
                "dmp": {
                    "type": "string",
                    "example": "1,2"
                },
                "domain": {
                    "type": "string",
                    "example": "google.com"
                },
                "ecpc": {
                    "type": "number",
                    "example": 0
                },
                "ecpm": {
                    "type": "number",
                    "example": 0
                },
                "freq_cap_delay": {
                    "type": "integer",
                    "example": 10
                },
                "freq_cap_type": {
                    "type": "string",
                    "example": "day"
                },
                "freq_cap_value": {
                    "type": "integer",
                    "example": 10
                },
                "group_id": {
                    "type": "integer",
                    "example": 2
                },
                "iab": {
                    "type": "string",
                    "example": "IAB1,IAB2"
                },
                "id": {
                    "type": "integer"
                },
                "impression_html": {
                    "type": "string"
                },
                "impression_pixel": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_archived": {
                    "type": "boolean",
                    "example": false
                },
                "isp": {
                    "type": "string",
                    "example": "1,2"
                },
                "languages": {
                    "type": "string",
                    "example": "en,ru"
                },
                "limit_click_day": {
                    "type": "integer",
                    "example": 1000
                },
                "limit_click_total": {
                    "type": "integer",
                    "example": 1000
                },
                "limit_spend_day": {
                    "type": "number",
                    "example": 10
                },
                "limit_spend_total": {
                    "type": "number",
                    "example": 10
                },
                "limit_view_day": {
                    "type": "integer",
                    "example": 10000
                },
                "limit_view_total": {
                    "type": "integer",
                    "example": 10000
                },
                "lists": {
                    "type": "object",
                    "$ref": "#/definitions/list.CampaignList"
                },
                "meta": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Shop campaigns"
                },
                "os": {
                    "type": "string",
                    "example": "801,802"
                },
                "placement_type": {
                    "type": "string",
                    "example": "inapp"
                },
                "price_priority": {
                    "type": "number"
                },
                "publisher_cap_daily": {
                    "type": "number",
                    "example": 10
                },
                "region": {
                    "type": "string",
                    "example": "486954,125487"
                },
                "spend_evenly": {
                    "type": "boolean",
                    "example": false
                },
                "ssp": {
                    "type": "string",
                    "example": "15,16"
                },
                "stat": {
                    "type": "object",
                    "$ref": "#/definitions/ad.Stat"
                },
                "strategy": {
                    "type": "string",
                    "example": "flat"
                },
                "tags": {
                    "type": "string",
                    "example": "2018,shop"
                },
                "target_tags": {
                    "type": "string",
                    "example": "12f,14f"
                },
                "target_url": {
                    "type": "string",
                    "example": "http://google.com"
                },
                "time": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ad.CampaignTime"
                    }
                }
            }
        },
        "ad.CampaignMedia": {
            "type": "object",
            "properties": {
                "banner_id": {
                    "type": "integer",
                    "example": 15
                },
                "native_id": {
                    "type": "integer"
                },
                "tag_id": {
                    "type": "integer"
                },
                "video_id": {
                    "type": "integer"
                }
            }
        },
        "ad.CampaignTime": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer",
                    "example": 1
                },
                "hour": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "ad.Group": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "advertiser_name": {
                    "type": "string",
                    "example": "Advertiser name"
                },
                "agency_name": {
                    "type": "string",
                    "example": "Agency name"
                },
                "append_code": {
                    "type": "string"
                },
                "iab_category": {
                    "type": "string",
                    "example": "IAB-1"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Group name"
                }
            }
        },
        "ad.MicroBid": {
            "type": "object",
            "required": [
                "field",
                "key"
            ],
            "properties": {
                "bid": {
                    "type": "number",
                    "example": 3.312
                },
                "budget_day": {
                    "description": "Not used now. Need to code it",
                    "type": "number",
                    "example": 0
                },
                "budget_total": {
                    "type": "number",
                    "example": 0
                },
                "field": {
                    "type": "string",
                    "example": "1"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "key": {
                    "type": "string",
                    "example": "domain.com"
                }
            }
        },
        "ad.Stat": {
            "type": "object",
            "properties": {
                "bids": {
                    "type": "integer",
                    "example": 10
                },
                "clicks": {
                    "type": "integer",
                    "example": 10
                },
                "cost": {
                    "type": "number",
                    "example": 10
                },
                "cpc": {
                    "type": "number",
                    "example": 10
                },
                "cpm": {
                    "type": "number",
                    "example": 10
                },
                "ctr": {
                    "type": "number",
                    "example": 10
                },
                "winrate": {
                    "type": "number",
                    "example": 10
                },
                "wins": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "adapter.Adapters": {
            "type": "array",
            "items": {}
        },
        "api.SuccessAnswer": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "request completed"
                }
            }
        },
        "api.SuccessfulCreation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3234
                },
                "message": {
                    "type": "string",
                    "example": "successfull creation"
                }
            }
        },
        "api.SuccessfulCreationArray": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "successfull creation"
                }
            }
        },
        "audience.Audience": {
            "type": "object",
            "required": [
                "name",
                "tags"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "items_count": {
                    "type": "integer",
                    "example": 1000
                },
                "name": {
                    "type": "string",
                    "example": "Active users"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "users",
                        "first"
                    ]
                }
            }
        },
        "audience.Condition": {
            "type": "object",
            "required": [
                "cond",
                "id"
            ],
            "properties": {
                "cond": {
                    "type": "string",
                    "example": "="
                },
                "date_end": {
                    "type": "integer",
                    "example": 10
                },
                "date_start": {
                    "type": "integer",
                    "example": 15
                },
                "field": {
                    "type": "string",
                    "example": "event"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "value": {
                    "type": "string",
                    "example": "order"
                }
            }
        },
        "audience.Log": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "log": {
                    "type": "string",
                    "example": "add 4654 records"
                }
            }
        },
        "audience.Pixel": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string",
                    "example": "http://domain.com/image.jpg?aaa=bbb"
                },
                "javascript": {
                    "type": "string",
                    "example": "\u003cscript\u003e\u003c/script\u003e"
                }
            }
        },
        "audience.Rule": {
            "type": "object",
            "required": [
                "list_id",
                "name"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "example": "UPDATE"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "list_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Users \u003e 100 views"
                }
            }
        },
        "auth.FailureResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "incorrect login or password"
                }
            }
        },
        "auth.SuccessResponse": {
            "type": "object",
            "properties": {
                "expire": {
                    "type": "string",
                    "example": "2050-01-01T00:00:00+00:00"
                },
                "token": {
                    "type": "string",
                    "example": "XXXxxxXxxXXXxxxxxxxxxxxxxxxxxXXXXXxxxxxxxxxXXXXxXxxXXxxXXxxxxxX.xXxxXXXXxxxxxxxxxXXX"
                }
            }
        },
        "auto.ListParams": {
            "type": "object",
            "properties": {
                "list_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "auto.Log": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "data_script": {
                    "type": "object",
                    "$ref": "#/definitions/datascript.DataScript"
                },
                "events": {
                    "type": "object"
                },
                "res": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "auto.MicroBidParams": {
            "type": "object",
            "properties": {
                "coefficient": {
                    "type": "number",
                    "example": 0.5
                }
            }
        },
        "auto.Rule": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "list_add"
                },
                "campaign": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                },
                "condition": {
                    "type": "string",
                    "example": "clicks \u003e 2"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "list_params": {
                    "type": "object",
                    "$ref": "#/definitions/auto.ListParams"
                },
                "microbid_params": {
                    "type": "object",
                    "$ref": "#/definitions/auto.MicroBidParams"
                },
                "name": {
                    "type": "string",
                    "example": "First rule"
                },
                "period": {
                    "type": "integer",
                    "example": 60
                },
                "report_type": {
                    "type": "string",
                    "example": "domain"
                },
                "schedule": {
                    "type": "integer",
                    "example": 60
                }
            }
        },
        "auto.RuleLog": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "log": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auto.Log"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Found: 300"
                },
                "rule_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "balance.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 1254
                }
            }
        },
        "block.Code": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "browser.Search": {
            "type": "object",
            "required": [
                "substring"
            ],
            "properties": {
                "substring": {
                    "type": "string",
                    "example": "chrome"
                }
            }
        },
        "campaign.CopyParams": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "boolean",
                    "example": true
                },
                "city": {
                    "type": "boolean",
                    "example": true
                },
                "country": {
                    "type": "boolean",
                    "example": true
                },
                "device": {
                    "type": "boolean",
                    "example": true
                },
                "lang": {
                    "type": "boolean",
                    "example": true
                },
                "list": {
                    "type": "boolean",
                    "example": true
                },
                "media": {
                    "type": "boolean",
                    "example": true
                },
                "micro_bid": {
                    "type": "boolean",
                    "example": true
                },
                "os": {
                    "type": "boolean",
                    "example": true
                },
                "region": {
                    "type": "boolean",
                    "example": true
                },
                "ssp": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "campaign.Pixel": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string",
                    "example": "http://domain.com/image.jpg?aaa=bbb"
                },
                "javascript": {
                    "type": "string",
                    "example": "\u003cscript\u003e\u003c/script\u003e"
                }
            }
        },
        "condition.Conditions": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/audience.Condition"
                    }
                }
            }
        },
        "crm.Dsp": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "code": {
                    "type": "string",
                    "example": "big_ssp"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "margin": {
                    "type": "integer",
                    "example": 30
                },
                "name": {
                    "type": "string",
                    "example": "Bid SSP"
                },
                "stat": {
                    "type": "object",
                    "$ref": "#/definitions/crm.Stat"
                }
            }
        },
        "crm.Ssp": {
            "type": "object",
            "required": [
                "adapter",
                "code",
                "name"
            ],
            "properties": {
                "adapter": {
                    "type": "string",
                    "example": "default"
                },
                "auxData": {
                    "type": "object",
                    "$ref": "#/definitions/crm.SspAux"
                },
                "code": {
                    "type": "string",
                    "example": "bid_ssp"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_public": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Bid SSP"
                }
            }
        },
        "crm.SspAux": {
            "type": "object",
            "properties": {
                "append_html": {
                    "type": "string"
                },
                "customid": {
                    "type": "string"
                },
                "forward.geos": {
                    "type": "string"
                },
                "forward.to": {
                    "type": "string"
                },
                "logrequests": {
                    "type": "boolean"
                },
                "nurl_schema": {
                    "type": "string"
                },
                "seat": {
                    "type": "string"
                },
                "vast_container_version": {
                    "type": "string"
                },
                "vast_override": {
                    "type": "string"
                }
            }
        },
        "crm.Stat": {
            "type": "object",
            "properties": {
                "auctions": {
                    "type": "integer"
                },
                "bids": {
                    "type": "integer"
                },
                "errors": {
                    "type": "integer"
                },
                "win_price": {
                    "description": "revenue",
                    "type": "number"
                },
                "wins": {
                    "type": "integer"
                }
            }
        },
        "datascript.DataScript": {
            "type": "object",
            "properties": {
                "clicks": {
                    "type": "integer"
                },
                "cost": {
                    "type": "number"
                },
                "cpc": {
                    "type": "number"
                },
                "cpm": {
                    "type": "number"
                },
                "cr": {
                    "type": "number"
                },
                "ctr": {
                    "type": "number"
                },
                "ecpc": {
                    "type": "number"
                },
                "ecpm": {
                    "type": "number"
                },
                "gross": {
                    "type": "number"
                },
                "leads": {
                    "type": "integer"
                },
                "roi": {
                    "type": "number"
                },
                "target_cpc": {
                    "type": "number"
                },
                "target_cpm": {
                    "type": "number"
                },
                "views": {
                    "type": "integer"
                },
                "views_uniq": {
                    "type": "integer"
                },
                "winrate": {
                    "type": "number"
                }
            }
        },
        "demand.DemandReportOption": {
            "type": "object",
            "required": [
                "date_end",
                "date_start",
                "group_by",
                "limit",
                "page",
                "sort_field",
                "sort_type",
                "time_zone"
            ],
            "properties": {
                "aggrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "geo_country",
                        "geo_city"
                    ]
                },
                "all_fields": {
                    "type": "boolean"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "views",
                        "bids",
                        "cost",
                        "cpc"
                    ]
                },
                "date_end": {
                    "type": "string",
                    "example": "2019-04-01T00:00:00Z"
                },
                "date_start": {
                    "type": "string",
                    "example": "2019-02-01T00:00:00Z"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "type": "object"
                },
                "group_by": {
                    "type": "string",
                    "example": "geo_country"
                },
                "hour_end": {
                    "type": "integer"
                },
                "hour_start": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "sort_field": {
                    "type": "string",
                    "example": "ssp"
                },
                "sort_type": {
                    "type": "string",
                    "example": "asc"
                },
                "time_zone": {
                    "type": "string",
                    "example": "Etc/UTC"
                }
            }
        },
        "device.Search": {
            "type": "object",
            "required": [
                "substring"
            ],
            "properties": {
                "substring": {
                    "type": "string",
                    "example": "samsung"
                }
            }
        },
        "dict.Browser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "type": "string",
                    "example": "Chrome"
                },
                "parent_id": {
                    "type": "integer",
                    "example": 0
                },
                "version": {
                    "type": "string",
                    "example": "10.0"
                }
            }
        },
        "dict.BrowserView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "type": "string",
                    "example": "Chrome 10"
                }
            }
        },
        "dict.Device": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "type": "string",
                    "example": "ALCATEL ONE TOUCH"
                },
                "parent_id": {
                    "type": "integer",
                    "example": 0
                },
                "version": {
                    "type": "string",
                    "example": "Fire C"
                }
            }
        },
        "dict.DeviceType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "type": "string",
                    "example": "Tv"
                }
            }
        },
        "dict.DeviceView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "type": "string",
                    "example": "ALCATEL ONE TOUCH 5"
                }
            }
        },
        "dict.DisplaySize": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "100x100"
                },
                "width": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "dict.FetchByIdsParams": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                }
            }
        },
        "dict.Geo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "MSK"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "title": {
                    "type": "string",
                    "example": "Moscow"
                },
                "type": {
                    "type": "string",
                    "example": "city"
                }
            }
        },
        "dict.Iab": {
            "type": "object",
            "properties": {
                "cat": {
                    "type": "string",
                    "example": "IAB1"
                },
                "full_name": {
                    "type": "string",
                    "example": "IAB1 Arts \u0026 Entertainment"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "dict.Isp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "type": "string",
                    "example": "Moscow"
                }
            }
        },
        "dict.Lang": {
            "type": "object",
            "properties": {
                "alpha_2": {
                    "type": "string",
                    "example": "aa"
                },
                "name": {
                    "type": "string",
                    "example": "Afar"
                }
            }
        },
        "dict.Os": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Android"
                },
                "parent_id": {
                    "type": "integer",
                    "example": 0
                },
                "version": {
                    "type": "string",
                    "example": "4.0"
                }
            }
        },
        "dict.OsView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                }
            }
        },
        "dict.Region": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "code"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "dmp.FoundDmp": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string",
                    "example": "DMP \u003e Segment 1 \u003e sub segment (0.1$)"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "price_cpm": {
                    "type": "number"
                },
                "segment_name": {
                    "type": "string",
                    "example": "DMP \u003e Segment 1 \u003e sub segment"
                }
            }
        },
        "dmp.Search": {
            "type": "object",
            "required": [
                "substring"
            ],
            "properties": {
                "substring": {
                    "type": "string",
                    "example": "segment"
                }
            }
        },
        "geo.CitySearch": {
            "type": "object",
            "required": [
                "country_codes",
                "substring"
            ],
            "properties": {
                "country_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "232"
                    ]
                },
                "substring": {
                    "type": "string",
                    "example": "moscow"
                }
            }
        },
        "geo.RegionSearch": {
            "type": "object",
            "required": [
                "country_codes",
                "substring"
            ],
            "properties": {
                "country_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "232"
                    ]
                },
                "substring": {
                    "type": "string",
                    "example": "moscow"
                }
            }
        },
        "iab.IabParams": {
            "type": "object",
            "properties": {
                "codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "IAB-1",
                        "IAB-2"
                    ]
                }
            }
        },
        "influxservice.NobidResponse": {
            "type": "object",
            "properties": {
                "in_campaign": {
                    "type": "integer",
                    "example": 3000
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/influxservice.NobidRow"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 200000
                }
            }
        },
        "influxservice.NobidRow": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 50000
                },
                "percent": {
                    "type": "number",
                    "example": 55.5
                },
                "reason": {
                    "type": "integer",
                    "example": 1
                },
                "reason_string": {
                    "type": "string",
                    "example": "MatcherFeatureUnknown"
                }
            }
        },
        "influxservice.TrendsResponse": {
            "type": "object",
            "additionalProperties": {}
        },
        "inv.Block": {
            "type": "object",
            "required": [
                "min_floor",
                "name",
                "size_id"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "allow_close": {
                    "type": "boolean"
                },
                "callback": {
                    "type": "string"
                },
                "descr": {
                    "type": "string",
                    "example": "First description"
                },
                "fly_roll": {
                    "type": "boolean"
                },
                "hidden_load": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "min_floor": {
                    "type": "number",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "First block"
                },
                "placement_id": {
                    "type": "integer",
                    "example": 1
                },
                "placement_type": {
                    "type": "string"
                },
                "size": {
                    "type": "object",
                    "$ref": "#/definitions/dict.DisplaySize"
                },
                "size_id": {
                    "type": "integer",
                    "example": 2
                },
                "tag_version": {
                    "type": "integer"
                },
                "viewport": {
                    "type": "boolean"
                },
                "waterfall": {
                    "type": "boolean"
                }
            }
        },
        "inv.Placement": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "bundle": {
                    "type": "string",
                    "example": "domain.com"
                },
                "domain": {
                    "type": "string",
                    "example": "domain.com"
                },
                "iab_category": {
                    "type": "string",
                    "example": "IAB1-1"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "inventory_type": {
                    "type": "string",
                    "example": "web"
                },
                "name": {
                    "type": "string",
                    "example": "First placement"
                },
                "ssp_id": {
                    "type": "integer",
                    "example": 1
                },
                "store_url": {
                    "type": "string",
                    "example": "http://gomain.com"
                }
            }
        },
        "isp.Search": {
            "type": "object",
            "required": [
                "substring"
            ],
            "properties": {
                "substring": {
                    "type": "string",
                    "example": "voda"
                }
            }
        },
        "list.Ban": {
            "type": "object",
            "properties": {
                "action_ban": {
                    "type": "boolean"
                },
                "record": {
                    "type": "string"
                },
                "type_list": {
                    "type": "string"
                }
            }
        },
        "list.CampaignList": {
            "type": "object",
            "properties": {
                "bundle_id": {
                    "type": "integer",
                    "example": 1
                },
                "bundle_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "bundle_strategy": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "integer",
                    "example": 1
                },
                "domain_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "domain_strategy": {
                    "type": "string"
                },
                "idfa_id": {
                    "type": "integer",
                    "example": 1
                },
                "idfa_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "idfa_strategy": {
                    "type": "string"
                },
                "ip_id": {
                    "type": "integer",
                    "example": 1
                },
                "ip_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ip_strategy": {
                    "type": "string"
                },
                "userid_id": {
                    "type": "integer",
                    "example": 1
                },
                "userid_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userid_strategy": {
                    "type": "string"
                }
            }
        },
        "list.List": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 1000
                },
                "id": {
                    "type": "integer"
                },
                "listData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/list.ListData"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "First list"
                },
                "type": {
                    "type": "string",
                    "example": "domain"
                }
            }
        },
        "list.ListData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "listId": {
                    "type": "integer"
                },
                "record": {
                    "type": "string"
                }
            }
        },
        "listdata.Pagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "next_page": {
                    "type": "integer",
                    "example": 3
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "page": {
                    "type": "integer",
                    "example": 2
                },
                "prev_page": {
                    "type": "integer",
                    "example": 1
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "google.com",
                        "gmail.com"
                    ]
                },
                "total_page": {
                    "type": "integer",
                    "example": 10
                },
                "total_record": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "listdata.Records": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "google.com",
                        "gmail.com"
                    ]
                }
            }
        },
        "media.AllMedia": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.DetailMedia"
                    }
                },
                "native": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.DetailMedia"
                    }
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.DetailMedia"
                    }
                },
                "video": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.DetailMedia"
                    }
                }
            }
        },
        "media.Banner": {
            "type": "object",
            "required": [
                "impression_pixel",
                "name",
                "tags"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "click_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "object",
                    "$ref": "#/definitions/media.Images"
                },
                "impression_html": {
                    "type": "string"
                },
                "impression_pixel": {
                    "type": "string"
                },
                "is_approved": {
                    "type": "boolean"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                }
            }
        },
        "media.CampaignMedia": {
            "type": "object",
            "properties": {
                "all_media": {
                    "type": "object",
                    "$ref": "#/definitions/media.AllMedia"
                },
                "campaign_name": {
                    "type": "string"
                }
            }
        },
        "media.DetailMedia": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "bids": {
                    "type": "integer",
                    "example": 10
                },
                "clicks": {
                    "type": "integer",
                    "example": 10
                },
                "cost": {
                    "type": "number",
                    "example": 10
                },
                "cpc": {
                    "type": "number",
                    "example": 10
                },
                "cpm": {
                    "type": "number",
                    "example": 10
                },
                "ctr": {
                    "type": "number",
                    "example": 10
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.Image"
                    }
                },
                "is_approved": {
                    "type": "boolean",
                    "example": true
                },
                "media_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Name media"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "2018",
                        "shop"
                    ]
                },
                "winrate": {
                    "type": "number",
                    "example": 10
                },
                "wins": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "media.Image": {
            "type": "object",
            "properties": {
                "img": {
                    "type": "string",
                    "example": "http://google.com/asdfdfsfhk.jpg"
                },
                "size": {
                    "type": "string",
                    "example": "320x480"
                }
            }
        },
        "media.Images": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "img": {
                        "type": "string",
                        "example": "http://google.com/asdfdfsfhk.jpg"
                    },
                    "size": {
                        "type": "string",
                        "example": "320x480"
                    }
                }
            }
        },
        "media.ItemMedia": {
            "type": "object",
            "properties": {
                "approved": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "integer",
                    "example": 11
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.Image"
                    }
                },
                "is_archived": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Big banner"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "shop",
                        "bidshop"
                    ]
                },
                "type": {
                    "type": "string",
                    "example": "banner"
                }
            }
        },
        "media.MediaLists": {
            "type": "object",
            "properties": {
                "media_lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ad.CampaignMedia"
                    }
                }
            }
        },
        "media.Native": {
            "type": "object",
            "required": [
                "impression_pixel",
                "name",
                "tags"
            ],
            "properties": {
                "button": {
                    "type": "string"
                },
                "click_url": {
                    "type": "string"
                },
                "descr": {
                    "type": "string"
                },
                "icons": {
                    "type": "object",
                    "$ref": "#/definitions/media.Images"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "object",
                    "$ref": "#/definitions/media.Images"
                },
                "impression_html": {
                    "type": "string"
                },
                "impression_pixel": {
                    "type": "string"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "stars": {
                    "type": "integer"
                },
                "tags": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "media.Params": {
            "type": "object",
            "properties": {
                "date_end": {
                    "type": "string",
                    "example": "2019-12-01T00:00:00Z"
                },
                "date_start": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "with_stat": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "media.Tag": {
            "type": "object",
            "required": [
                "impression_pixel",
                "name",
                "tags"
            ],
            "properties": {
                "body": {
                    "type": "string",
                    "example": "\u003cdiv\u003e\u003c/div\u003e"
                },
                "click_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "object",
                    "$ref": "#/definitions/media.Images"
                },
                "impression_html": {
                    "type": "string"
                },
                "impression_pixel": {
                    "type": "string"
                },
                "is_approved": {
                    "type": "boolean",
                    "example": true
                },
                "is_archived": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string",
                    "example": "100x50,100x100"
                },
                "tags": {
                    "type": "string"
                }
            }
        },
        "media.VastEvent": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "media.Video": {
            "type": "object",
            "required": [
                "impression_pixel",
                "name",
                "tags"
            ],
            "properties": {
                "bitrate": {
                    "type": "integer",
                    "example": 300
                },
                "click_url": {
                    "type": "string",
                    "example": "https://google.com"
                },
                "duration": {
                    "type": "integer",
                    "example": 60
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "images": {
                    "type": "object",
                    "$ref": "#/definitions/media.Images"
                },
                "impression_pixel": {
                    "type": "string",
                    "example": "https://google.com,https://google.com"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "mime": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "First banner"
                },
                "size": {
                    "type": "string",
                    "example": "100x50,100x100"
                },
                "tags": {
                    "type": "string",
                    "example": "shop,2018"
                },
                "vast_body": {
                    "description": "vast body",
                    "type": "string",
                    "example": "\u003cvast\u003e...\u003c/vast\u003e"
                },
                "vast_event": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/media.VastEvent"
                    }
                },
                "vast_url": {
                    "description": "url of remote vast",
                    "type": "string",
                    "example": "https://google.com"
                },
                "video_url": {
                    "description": "url to media file",
                    "type": "string",
                    "example": "https://google.com"
                }
            }
        },
        "microbid.UpdateBid": {
            "type": "object",
            "required": [
                "field",
                "key"
            ],
            "properties": {
                "bid": {
                    "type": "number",
                    "example": 3.312
                },
                "field": {
                    "type": "string",
                    "example": "1"
                },
                "key": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "os.Search": {
            "type": "object",
            "required": [
                "substring"
            ],
            "properties": {
                "substring": {
                    "type": "string",
                    "example": "windows"
                }
            }
        },
        "password.NewPassword": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "823hfsdFG49H"
                },
                "old_password": {
                    "type": "string",
                    "example": "hHjh78ihGlkF"
                }
            }
        },
        "placementtype.PlacementTypes": {
            "type": "array",
            "items": {}
        },
        "profile.Profile": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "example": 1
                },
                "account_name": {
                    "type": "string",
                    "example": "PR agency"
                },
                "balance": {
                    "type": "number",
                    "example": 1000
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "email": {
                    "type": "string",
                    "example": "name@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "E-commerce"
                }
            }
        },
        "ssp.Campaign": {
            "type": "object",
            "required": [
                "adapter",
                "date_end",
                "date_start",
                "dsp_id",
                "endpoint",
                "name",
                "placement_type",
                "region_id",
                "ssp"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "adapter": {
                    "type": "string",
                    "example": "default"
                },
                "country": {
                    "type": "string",
                    "example": "US"
                },
                "date_end": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "date_start": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "display_size": {
                    "type": "string",
                    "example": "480x320"
                },
                "dsp_id": {
                    "type": "integer",
                    "example": 1
                },
                "endpoint": {
                    "type": "string",
                    "example": "http://domain.com/endpoint"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "limit_spend_day": {
                    "type": "number",
                    "example": 100
                },
                "limit_spend_total": {
                    "type": "number",
                    "example": 1000
                },
                "max_qps": {
                    "type": "integer",
                    "example": 100
                },
                "name": {
                    "type": "string",
                    "example": "First campaign"
                },
                "placement_type": {
                    "type": "string",
                    "example": "banner"
                },
                "region_id": {
                    "type": "integer",
                    "example": 1
                },
                "rl": {
                    "description": "total limiter",
                    "type": "string"
                },
                "ssp": {
                    "type": "string",
                    "example": "15,16"
                },
                "stat": {
                    "type": "object",
                    "$ref": "#/definitions/ssp.Stat"
                },
                "tags": {
                    "type": "string",
                    "example": "shop"
                }
            }
        },
        "ssp.Endpoint": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string",
                    "example": "us-east"
                },
                "region_name": {
                    "type": "string",
                    "example": "US East"
                },
                "url": {
                    "type": "string",
                    "example": "https://domain.ru/bid/65634535"
                }
            }
        },
        "ssp.EndpointResponse": {
            "type": "object",
            "properties": {
                "openrtb": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssp.EndpointResponseData"
                    }
                },
                "vast": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssp.EndpointResponseData"
                    }
                },
                "vpaid": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssp.EndpointResponseData"
                    }
                }
            }
        },
        "ssp.EndpointResponseData": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string",
                    "example": "us-east"
                },
                "region_name": {
                    "type": "string",
                    "example": "US East"
                },
                "url": {
                    "type": "string",
                    "example": "https://domain.ru/bid/65634535"
                }
            }
        },
        "ssp.Ssp": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "adapter": {
                    "type": "string"
                },
                "aux": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "parent_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "ssp.Stat": {
            "type": "object",
            "properties": {
                "auctions": {
                    "type": "integer"
                },
                "bids": {
                    "type": "integer"
                },
                "errors": {
                    "type": "integer"
                },
                "win_price": {
                    "description": "revenue",
                    "type": "number"
                },
                "wins": {
                    "type": "integer"
                }
            }
        },
        "ssp.StatSsp": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "stat.RequestDspWithStat": {
            "type": "object",
            "required": [
                "date_end",
                "date_start"
            ],
            "properties": {
                "date_end": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "date_start": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                }
            }
        },
        "stat.StatParams": {
            "type": "object",
            "required": [
                "date_end",
                "date_start"
            ],
            "properties": {
                "date_end": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "date_start": {
                    "type": "string",
                    "example": "2018-12-01T00:00:00Z"
                },
                "is_archived": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "statservice.InventoryOverview": {
            "type": "object",
            "properties": {
                "app_bundle": {
                    "type": "object"
                },
                "display_size": {
                    "type": "object"
                },
                "geo_country": {
                    "type": "object"
                },
                "placement": {
                    "type": "object"
                },
                "site_domain": {
                    "type": "object"
                },
                "type": {
                    "type": "object"
                }
            }
        },
        "statservice.Item": {
            "type": "object",
            "properties": {
                "avg_session_len": {
                    "type": "number"
                },
                "ban": {
                    "type": "boolean"
                },
                "bounce_rate": {
                    "type": "number"
                },
                "clicks": {
                    "type": "integer",
                    "example": 1
                },
                "cost": {
                    "type": "number",
                    "example": 10
                },
                "cpc": {
                    "type": "number",
                    "example": 0.05
                },
                "cpm": {
                    "type": "number",
                    "example": 0.05
                },
                "cr": {
                    "type": "number",
                    "example": 0.05
                },
                "ctr": {
                    "type": "number",
                    "example": 0.05
                },
                "ecpc": {
                    "type": "number",
                    "example": 0.05
                },
                "ecpm": {
                    "type": "number",
                    "example": 0.05
                },
                "events": {
                    "type": "object"
                },
                "gross": {
                    "type": "number",
                    "example": 5
                },
                "group_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "group_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "leads": {
                    "type": "integer",
                    "example": 1
                },
                "microbid": {
                    "type": "number"
                },
                "pages_per_session": {
                    "type": "number"
                },
                "passing_index": {
                    "type": "number"
                },
                "robots": {
                    "type": "integer"
                },
                "roi": {
                    "type": "number",
                    "example": 10
                },
                "sessions": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "example": "ssp_id"
                },
                "views": {
                    "type": "integer",
                    "example": 100
                },
                "views_uniq": {
                    "type": "integer",
                    "example": 100
                },
                "winrate": {
                    "type": "number",
                    "example": 0.05
                }
            }
        },
        "statservice.MultiReport": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/statservice.Item"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "page": {
                    "type": "integer",
                    "example": 2
                },
                "total": {
                    "type": "object",
                    "$ref": "#/definitions/statservice.Stat"
                },
                "total_page": {
                    "type": "integer",
                    "example": 10
                },
                "total_record": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "statservice.Stat": {
            "type": "object",
            "properties": {
                "avg_session_len": {
                    "type": "number"
                },
                "bounce_rate": {
                    "type": "number"
                },
                "clicks": {
                    "type": "integer",
                    "example": 1
                },
                "cost": {
                    "type": "number",
                    "example": 10
                },
                "cpc": {
                    "type": "number",
                    "example": 0.05
                },
                "cpm": {
                    "type": "number",
                    "example": 0.05
                },
                "cr": {
                    "type": "number",
                    "example": 0.05
                },
                "ctr": {
                    "type": "number",
                    "example": 0.05
                },
                "ecpc": {
                    "type": "number",
                    "example": 0.05
                },
                "ecpm": {
                    "type": "number",
                    "example": 0.05
                },
                "events": {
                    "type": "object"
                },
                "gross": {
                    "type": "number",
                    "example": 5
                },
                "leads": {
                    "type": "integer",
                    "example": 1
                },
                "pages_per_session": {
                    "type": "number"
                },
                "passing_index": {
                    "type": "number"
                },
                "robots": {
                    "type": "integer"
                },
                "roi": {
                    "type": "number",
                    "example": 10
                },
                "sessions": {
                    "type": "integer"
                },
                "views": {
                    "type": "integer",
                    "example": 100
                },
                "views_uniq": {
                    "type": "integer",
                    "example": 100
                },
                "winrate": {
                    "type": "number",
                    "example": 0.05
                }
            }
        }
    }
}
